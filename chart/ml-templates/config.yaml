kind: MLApp
metadata:
  name: svod_rcgn
spec:
  default_mount_path: /notebooks
  default_read_only: false
  package_manager: pip3
  packages:
  - manager: pip3
  tasks:
  - name: prepare-classifiers
    resources:
    - command: python prepare.py
        --input_dir $FACES_DIR
        --aligned_dir $TRAINING_DIR/aligned
        {{- if .bgrm.value }}
        --bg_remove_path $BGRM_DIR
        {{- end }}
        --model_dir $FACENET_DIR
        --classifiers_dir $TRAINING_DIR/classifiers
      default_volume_mapping: true
      images:
        cpu: kuberlab/serving:latest-openvino
        gpu: kuberlab/serving:latest-openvino-gpu
      name: worker
      replicas: 1
      resources:
        limits:
          cpu: "2"
          memory: 8Gi
        requests:
          cpu: "1"
          memory: 512Mi
      restartPolicy: Never
      workDir: $SRC_DIR
  - name: export-classifiers
    resources:
      - command: python export_model.py
          --classifiers_dir $TRAINING_DIR/classifiers
        default_volume_mapping: true
        images:
          cpu: kuberlab/serving:latest-openvino
          gpu: kuberlab/serving:latest-openvino-gpu
        name: worker
        replicas: 1
        resources:
          limits:
            cpu: "2"
            memory: 8Gi
          requests:
            cpu: 100m
            memory: 64Mi
        restartPolicy: Never
        workDir: $SRC_DIR
  uix:
  - default_volume_mapping: true
    displayName: Jupyter
    images:
      cpu: kuberlab/tensorflow:cpu-36-1.9.0-full
    name: jupyter
    ports:
    - name: http
      port: 8888
      protocol: TCP
      targetPort: 8888
    resources:
      limits:
        cpu: "2"
        memory: 4Gi
      requests:
        cpu: "1"
        memory: 512Mi
  serving:
  - name: serving
    displayName: OpenVino Serving
    images:
      cpu: "kuberlab/serving:latest-openvino"
      gpu: "kuberlab/serving:latest-openvino-gpu"
    command: >-
      kserving --driver openvino --model-path $FACENET_DIR/facenet.xml
      --hooks serving_hook.py
      {{- if and .bgrm.value .detection_bgrm.value }}
      -o bg_remove_path=$BGRM_DIR
      {{- end }}
      -o classifiers_dir=$MODEL_DIR
      -o model_dir=$FACENET_DIR
      -o flexible_batch_size=True
      {{- if .detection_debug.value }}
      -o debug=true
      {{- end }}
      -o threshold=0.25,0.3,0.3
    resources:
      accelerators:
        gpu: 0
      requests:
        cpu: 200m
        memory: 256M
      limits:
        cpu: 4000m
        memory: 4Gi
    spec:
      params:
      - name: input
        type: bytes
      response:
      - name: output
        type: bytes
        shape:
        - 1
        - -1
      - name: table_output
        type: string
        shape:
        - -1
      rawInput: true
      model: any
      template: "image"
      outFilter:
        - output
      outMimeType: "image/jpeg"
    workDir: $SRC_DIR
    sources:
    - gitRepo:
        repository: {{ gitRepo .src.value }}
        accountId: '{{ .src.accountId }}'
        revision: '{{ .src.revision }}'
      name: src
      subPath: {{ gitSubPath .src.value }}
    - name: facenet
      model:
        workspace: {{ .model.workspace }}
        model: {{ .model.value }}
        version: {{ .model.version }}
    - name: face-detection
      model:
        workspace: kuberlab-demo
        model: openvino-face-detection
        version: 1.4.0-cpu
    {{- if .bgrm.value }}
    - name: bgrm
      model:
        workspace: {{ .bgrm.workspace }}
        model: {{ .bgrm.value }}
        version: {{ .bgrm.version }}
    {{- end }}
    ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: http
  volumes:
  - clusterStorage: '{{ .storage.value }}'
    name: training
  - gitRepo:
      repository: {{ gitRepo .src.value }}
      accountId: '{{ .src.accountId }}'
      revision: '{{ .src.revision }}'
    isLibDir: false
    name: src
    subPath: {{ gitSubPath .src.value }}
  - clusterStorage: '{{ .storage.value }}'
    isLibDir: true
    name: lib
  - clusterStorage: '{{ .storage.value }}'
    mountPath: /notebooks
    name: code
    subPath: code
  - isLibDir: false
    name: facenet
    model:
      workspace: {{ .model.workspace }}
      model: {{ .model.value }}
      version: {{ .model.version }}
  - isLibDir: false
    name: faces
    {{- if .faces.value }}
    datasetFS:
      workspace: {{ .faces.workspace }}
      dataset: {{ .faces.value }}
      version: {{ .faces.version }}
    {{- else }}
    clusterStorage: {{ .storage.value }}
    {{- end }}
    {{- if .bgrm.value }}
  - isLibDir: false
    name: bgrm
    model:
      workspace: {{ .bgrm.workspace }}
      model: {{ .bgrm.value }}
      version: {{ .bgrm.version }}
    {{- end }}
